{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"8NAGA,SAASA,EAAOC,GACV,OACE,wBACAC,UAAU,SACVC,QAASF,EAAME,QAFf,SAGGF,EAAMG,Q,IAMTC,E,kDACF,WAAYJ,GAAQ,IAAD,8BACf,cAAOA,IACFK,MAAM,CACPC,QAASC,MAAM,GAAGC,KAAK,MAC3BC,SAAS,GAJM,E,+CAQnB,SAAYC,GAAQ,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAClDC,EAAgBP,IAAYA,EAAQI,KACvCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAK,IACxCE,KAAKG,SAAS,CACbR,QAASA,EACbG,SAAUE,KAAKN,MAAMI,a,0BAGrB,SAAaC,GAAI,IAAD,OAEd,OAAS,cAACX,EAAD,CACPI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKa,YAAYL,Q,oBAKpC,WACI,IACKM,EADCC,EAASJ,EAAgBF,KAAKN,MAAMC,SAO5C,OAJUU,EADHC,EACY,WAAaA,EACR,iBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAIpE,gCACE,qBAAKR,UAAU,SAAf,SAAyBe,IACzB,sBAAKf,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKjB,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKjB,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GAlDTC,IAAMC,WAyDpBC,E,4JACJ,WACE,OACE,sBAAKpB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GATSkB,IAAMC,WAsBzB,SAASP,EAAgBP,GAWvB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACrC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KArBTG,IAASC,OACP,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.e3f3a57c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction Square(props) {\n      return (\n        <button \n        className=\"square\" \n        onClick={props.onClick}>\n          {props.value}\n        </button>\n      );\n    \n  }\n  \n  class Board extends React.Component {\n      constructor(props) {\n          super (props);\n          this.state={\n              squares: Array(9).fill(null),\n          xIsNext: true,\n\n          };\n      }\n      handleClick(i) {    const squares = this.state.squares.slice();  \n       if (calculateWinner(squares) || squares[i]) {      return;    } \n        squares[i] = this.state.xIsNext ? 'X': 'O';   \n       this.setState({\n        squares: squares,\n    xIsNext: !this.state.xIsNext,\n}); \n }\n    renderSquare(i) {\n      \n      return ( <Square \n        value={this.state.squares[i]} \n        onClick={() => this.handleClick(i)}\n        />\n      );\n    }\n  \n    render() {\n        const winner = calculateWinner(this.state.squares);   \n         let status;    \n         if (winner) \n         {      status = 'Winner: ' + winner;    } \n         else {      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');    \n        }\n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }"],"sourceRoot":""}